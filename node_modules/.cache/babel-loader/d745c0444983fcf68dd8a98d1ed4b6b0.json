{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\brito\\\\Desktop\\\\Tareas\\\\Tarea C1 2020\\\\Programacion web\\\\firebase-chat\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\brito\\\\Desktop\\\\Tareas\\\\Tarea C1 2020\\\\Programacion web\\\\firebase-chat\\\\src\\\\components\\\\Alert.js\";\nimport React from 'react';\nimport clsx from 'clsx';\nimport Icon from '@material-ui/core/Icon';\nimport { amber, green } from '@material-ui/core/colors';\nimport IconButton from '@material-ui/core/IconButton';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\nimport { makeStyles } from '@material-ui/core/styles';\nconst useStyles = makeStyles(theme => ({\n  success: {\n    backgroundColor: green[600]\n  },\n  error: {\n    backgroundColor: theme.palette.error.dark\n  },\n  info: {\n    backgroundColor: theme.palette.primary.main\n  },\n  warning: {\n    backgroundColor: amber[700]\n  },\n  icon: {\n    fontSize: 20\n  },\n  iconVariant: {\n    opacity: 0.9,\n    marginRight: theme.spacing(1)\n  },\n  message: {\n    display: 'flex',\n    alignItems: 'center'\n  }\n}));\n\nconst Alert = ({\n  type,\n  message,\n  autoclose\n}) => {\n  const classes = useStyles();\n\n  const _React$useState = React.useState(true),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        open = _React$useState2[0],\n        setOpen = _React$useState2[1];\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  return React.createElement(Snackbar, {\n    anchorOrigin: {\n      vertical: 'bottom',\n      horizontal: 'center'\n    },\n    open: open,\n    autoHideDuration: autoclose,\n    onClose: handleClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(SnackbarContent, {\n    className: clsx(classes[type]),\n    \"aria-describedby\": \"client-snackbar\",\n    message: React.createElement(\"span\", {\n      id: \"client-snackbar\",\n      className: classes.message,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      className: clsx(classes.icon, classes.iconVariant),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, type === 'success' ? 'check_circle' : type), message),\n    action: [React.createElement(IconButton, {\n      key: \"close\",\n      \"aria-label\": \"close\",\n      color: \"inherit\",\n      onClick: handleClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      className: classes.icon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"close\"))],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }));\n};\n\nexport default Alert;","map":{"version":3,"sources":["C:\\Users\\brito\\Desktop\\Tareas\\Tarea C1 2020\\Programacion web\\firebase-chat\\src\\components\\Alert.js"],"names":["React","clsx","Icon","amber","green","IconButton","Snackbar","SnackbarContent","makeStyles","useStyles","theme","success","backgroundColor","error","palette","dark","info","primary","main","warning","icon","fontSize","iconVariant","opacity","marginRight","spacing","message","display","alignItems","Alert","type","autoclose","classes","useState","open","setOpen","handleClose","event","reason","vertical","horizontal"],"mappings":"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","sourcesContent":["import React from 'react';\nimport clsx from 'clsx';\nimport Icon from '@material-ui/core/Icon';\nimport { amber, green } from '@material-ui/core/colors';\nimport IconButton from '@material-ui/core/IconButton';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n  success: {\n    backgroundColor: green[600],\n  },\n  error: {\n    backgroundColor: theme.palette.error.dark,\n  },\n  info: {\n    backgroundColor: theme.palette.primary.main,\n  },\n  warning: {\n    backgroundColor: amber[700],\n  },\n  icon: {\n    fontSize: 20,\n  },\n  iconVariant: {\n    opacity: 0.9,\n    marginRight: theme.spacing(1),\n  },\n  message: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n}));\n\nconst Alert = ({ type, message, autoclose }) => {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(true);\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n\n  return (\n    <Snackbar\n      anchorOrigin={{\n        vertical: 'bottom',\n        horizontal: 'center',\n      }}\n      open={open}\n      autoHideDuration={autoclose}\n      onClose={handleClose}\n    >\n      <SnackbarContent\n        className={clsx(classes[type])}\n        aria-describedby=\"client-snackbar\"\n        message={\n          <span id=\"client-snackbar\" className={classes.message}>\n            <Icon className={clsx(classes.icon, classes.iconVariant)}>\n              {type === 'success' ? 'check_circle' : type }\n            </Icon>\n            {message}\n          </span>\n        }\n        action={[\n          <IconButton key=\"close\" aria-label=\"close\" color=\"inherit\" onClick={handleClose}>\n            <Icon className={classes.icon}>close</Icon>\n          </IconButton>,\n        ]}\n      />\n    </Snackbar>\n  );\n}\n\nexport default Alert;\n"]},"metadata":{},"sourceType":"module"}