{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\brito\\\\Desktop\\\\Tareas\\\\Tarea C1 2020\\\\Programacion web\\\\firebase-chat\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\brito\\\\Desktop\\\\Tareas\\\\Tarea C1 2020\\\\Programacion web\\\\firebase-chat\\\\src\\\\components\\\\Chat\\\\index.js\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport Paper from '@material-ui/core/Paper';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport firebase from 'firebase/app';\nimport 'firebase/database';\nimport 'firebase/auth';\nimport NewMessage from './NewMessage';\nimport CustomAvatar from '../CustomAvatar';\nimport { loadUser } from '../../utils/dbUtils';\nconst useStyles = makeStyles(theme => ({\n  text: {\n    padding: theme.spacing(2, 2, 0)\n  },\n  paper: {\n    paddingBottom: 50,\n    height: '70vh'\n  },\n  list: {\n    marginBottom: theme.spacing(3),\n    maxHeight: '100%',\n    overflow: 'auto'\n  }\n}));\n\nconst Chat = ({\n  history\n}) => {\n  const classes = useStyles();\n\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        messages = _useState2[0],\n        setMessages = _useState2[1];\n\n  const chatDomRef = useRef();\n\n  const addMessage = message => {\n    messages.push(message);\n    setMessages([...messages.sort((a, b) => a.date - b.date)]);\n\n    if (chatDomRef.current) {\n      chatDomRef.current.scrollTop = chatDomRef.current.scrollHeight;\n    }\n  };\n\n  useEffect(() => {\n    const chatRef = firebase.database().ref('/chat');\n    chatRef.on('child_added', snapshot => {\n      // nuevo mensaje\n      const messageItem = snapshot.val(); // leer los datos del usuario\n\n      loadUser(messageItem.user).then(data => {\n        messageItem.user = data;\n        addMessage(messageItem);\n      });\n    }, error => {\n      console.log(error);\n\n      if (error.message.includes('permission_denied')) {\n        history.push('/login');\n      }\n    }); // eslint-disable-next-line\n  }, []);\n  return React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(Paper, {\n    square: true,\n    className: classes.paper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    className: classes.text,\n    variant: \"h5\",\n    gutterBottom: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, \"Chat\"), React.createElement(List, {\n    className: classes.list,\n    ref: chatDomRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, messages.map(({\n    date,\n    user,\n    message\n  }) => React.createElement(ListItem, {\n    button: true,\n    key: date,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, React.createElement(ListItemAvatar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, React.createElement(CustomAvatar, {\n    name: user.name,\n    avatar: user.avatar,\n    size: \"md\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  })), React.createElement(ListItemText, {\n    primary: user ? user.name : 'anonymous',\n    secondary: message,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }))))), React.createElement(NewMessage, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }));\n};\n\nexport default withRouter(Chat);","map":{"version":3,"sources":["C:\\Users\\brito\\Desktop\\Tareas\\Tarea C1 2020\\Programacion web\\firebase-chat\\src\\components\\Chat\\index.js"],"names":["React","useState","useEffect","useRef","withRouter","makeStyles","Typography","Container","Paper","List","ListItem","ListItemAvatar","ListItemText","firebase","NewMessage","CustomAvatar","loadUser","useStyles","theme","text","padding","spacing","paper","paddingBottom","height","list","marginBottom","maxHeight","overflow","Chat","history","classes","messages","setMessages","chatDomRef","addMessage","message","push","sort","a","b","date","current","scrollTop","scrollHeight","chatRef","database","ref","on","snapshot","messageItem","val","user","then","data","error","console","log","includes","map","name","avatar"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport Paper from '@material-ui/core/Paper';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport firebase from 'firebase/app';\nimport 'firebase/database';\nimport 'firebase/auth';\nimport NewMessage from './NewMessage';\nimport CustomAvatar from '../CustomAvatar';\nimport { loadUser } from '../../utils/dbUtils';\n\nconst useStyles = makeStyles(theme => ({\n  text: {\n    padding: theme.spacing(2, 2, 0),\n  },\n  paper: {\n    paddingBottom: 50,\n    height: '70vh'\n  },\n  list: {\n    marginBottom: theme.spacing(3),\n    maxHeight: '100%',\n    overflow: 'auto'\n  },\n}));\n\nconst Chat = ({ history } ) => {\n  const classes = useStyles();\n  const [messages, setMessages] = useState([]);\n\n  const chatDomRef = useRef();\n\n  const addMessage = (message) => {\n    messages.push(message);\n    \n    setMessages([...messages.sort((a, b) => a.date - b.date)]);\n\n    if (chatDomRef.current) {\n      chatDomRef.current.scrollTop = chatDomRef.current.scrollHeight;\n    }\n  };\n\n  useEffect(() => {\n    const chatRef = firebase.database().ref('/chat');\n\n    chatRef.on(\n      'child_added',\n      snapshot => {\n        // nuevo mensaje\n        const messageItem = snapshot.val();\n        // leer los datos del usuario\n        loadUser(messageItem.user)\n        .then(data => {\n          messageItem.user = data;\n          addMessage(messageItem);\n        });\n      },\n      error => {\n        console.log(error);\n        if (error.message.includes('permission_denied')) {\n          history.push('/login');\n        }\n      }\n    );\n    // eslint-disable-next-line\n  }, []);\n\n\n  return (\n    <Container>\n      <Paper square className={classes.paper}>\n        <Typography className={classes.text} variant=\"h5\" gutterBottom>\n          Chat\n        </Typography>\n        <List className={classes.list} ref={chatDomRef}>\n          {messages.map(({ date, user, message }) => (\n            <ListItem button key={date}>\n              <ListItemAvatar>\n                <CustomAvatar name={user.name} avatar={user.avatar} size=\"md\" />\n              </ListItemAvatar>\n              <ListItemText primary={user ? user.name : 'anonymous'} secondary={message} />\n            </ListItem>\n          ))}\n        </List>\n      </Paper>\n      <NewMessage />\n    </Container>\n  );\n};\n\nexport default withRouter(Chat);\n"]},"metadata":{},"sourceType":"module"}